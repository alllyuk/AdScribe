#!/bin/bash
# –ö—Ä–∞—Å–∏–≤—ã–π –≤—ã–≤–æ–¥ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–π —Å —Ä–∞–∑–º–µ—Ä–∞–º–∏ (data: —Ç–æ–ª—å–∫–æ –¥–µ—Ä–µ–≤–æ –ø–∞–ø–æ–∫, –±–µ–∑ —Ñ–∞–π–ª–æ–≤, —Å –ø–æ–º–µ—Ç–∫–æ–π üëÅÔ∏è; venv: —Ç–æ–ª—å–∫–æ —Ñ–∞–∫—Ç –Ω–∞–ª–∏—á–∏—è)
# –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: bash show_sizes.sh

# ANSI –∂–∏—Ä–Ω—ã–π
BOLD='\033[1m'
NC='\033[0m'

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∫—Ä–∞—Å–∏–≤–æ–≥–æ –≤—ã–≤–æ–¥–∞ —Ä–∞–∑–º–µ—Ä–∞ –∏ –ø–æ–º–µ—Ç–∫–∏-—Ü–≤–µ—Ç–∞
human_size() {
    local size="$1"
    local mark=""
    if (( size > 1073741824 )); then
        mark=" üî∏"
    elif (( size > 10485760 )); then
        mark=" üîπ"
    fi
    echo -e "${BOLD}$(numfmt --to=iec --suffix=B "$size" 2>/dev/null || echo "$size B")${NC}$mark"
}

# –ö—ç—à —Ä–∞–∑–º–µ—Ä–æ–≤ (–∞—Å—Å–æ—Ü–∏–∞—Ç–∏–≤–Ω—ã–π –º–∞—Å—Å–∏–≤ bash)
declare -A SIZE_CACHE
get_size_cached() {
    local path="$1"
    if [[ -n "${SIZE_CACHE[$path]}" ]]; then
        echo "${SIZE_CACHE[$path]}"
    else
        local size=$(du -sb "$path" 2>/dev/null | cut -f1)
        SIZE_CACHE[$path]="$size"
        echo "$size"
    fi
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–±—Ö–æ–¥–∞ –¥–µ—Ä–µ–≤–∞ (–∫—Ä–æ–º–µ data –∏ venv)
print_tree() {
    local dir="$1"
    local prefix="$2"
    local is_last="$3"
    local entries=()
    while IFS= read -r entry; do entries+=("$entry"); done < <(ls -A "$dir" 2>/dev/null | grep -v -E '^(data|venv|vsix_extensions)$' | sort)
    local count="${#entries[@]}"
    local i=1
    for entry in "${entries[@]}"; do
        local path="$dir/$entry"
        local size=$(get_size_cached "$path")
        local size_str=$(human_size "$size")
        local connector="‚îú‚îÄ‚îÄ"
        local next_prefix="$prefix‚îÇ   "
        if [ $i -eq $count ]; then
            connector="‚îî‚îÄ‚îÄ"
            next_prefix="$prefix    "
        fi
        if [ -d "$path" ]; then
            echo -e "${prefix}${connector} ${BOLD}üìÅ $entry/${NC} $size_str"
            print_tree "$path" "$next_prefix" 0
        else
            echo -e "${prefix}${connector} üìÑ $entry $size_str"
        fi
        i=$((i+1))
    done
    # –ï—Å–ª–∏ –µ—Å—Ç—å –ø–∞–ø–∫–∞ data, –≤—ã–≤–æ–¥–∏–º —Ç–æ–ª—å–∫–æ –¥–µ—Ä–µ–≤–æ –ø–∞–ø–æ–∫ –≤–Ω—É—Ç—Ä–∏ –Ω–µ—ë –∏ –æ–±—â–∏–π —Ä–∞–∑–º–µ—Ä, –∞ —Ç–∞–∫–∂–µ –ø–æ–º–µ—Ç–∫—É üëÅÔ∏è
    if [ -d "$dir/data" ]; then
        local data_size=$(get_size_cached "$dir/data")
        local data_size_str=$(human_size "$data_size")
        echo -e "${prefix}‚îú‚îÄ‚îÄ ${BOLD}üìÅ data/${NC} $data_size_str üëÅÔ∏è"
        print_data_tree "$dir/data" "$prefix‚îÇ   "
    fi
    # –ï—Å–ª–∏ –µ—Å—Ç—å –ø–∞–ø–∫–∞ venv, –ø—Ä–æ—Å—Ç–æ –≤—ã–≤–æ–¥–∏–º —Ñ–∞–∫—Ç –Ω–∞–ª–∏—á–∏—è –∏ –æ–±—â–∏–π —Ä–∞–∑–º–µ—Ä
    if [ -d "$dir/venv" ]; then
        local venv_size=$(get_size_cached "$dir/venv")
        local venv_size_str=$(human_size "$venv_size")
        echo -e "${prefix}‚îî‚îÄ‚îÄ ${BOLD}üìÅ venv/${NC} $venv_size_str (—Å–∫—Ä—ã—Ç–æ —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ)"
    fi
    # –ï—Å–ª–∏ –µ—Å—Ç—å –ø–∞–ø–∫–∞ vsix_extensions, –ø—Ä–æ—Å—Ç–æ –≤—ã–≤–æ–¥–∏–º —Ñ–∞–∫—Ç –Ω–∞–ª–∏—á–∏—è –∏ –æ–±—â–∏–π —Ä–∞–∑–º–µ—Ä
    if [ -d "$dir/vsix_extensions" ]; then
        local vsix_size=$(get_size_cached "$dir/vsix_extensions")
        local vsix_size_str=$(human_size "$vsix_size")
        echo -e "${prefix}‚îî‚îÄ‚îÄ ${BOLD}üìÅ vsix_extensions/${NC} $vsix_size_str (—Å–∫—Ä—ã—Ç–æ —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ)"
    fi
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≤—ã–≤–æ–¥–∞ —Ç–æ–ª—å–∫–æ –¥–µ—Ä–µ–≤–∞ –ø–∞–ø–æ–∫ –≤–Ω—É—Ç—Ä–∏ data (–±–µ–∑ —Ñ–∞–π–ª–æ–≤, –Ω–æ —Å —Ä–∞–∑–º–µ—Ä–∞–º–∏ –ø–∞–ø–æ–∫ –∏ –ø–æ–º–µ—Ç–∫–æ–π üëÅÔ∏è)
print_data_tree() {
    local dir="$1"
    local prefix="$2"
    local entries=()
    while IFS= read -r entry; do entries+=("$entry"); done < <(ls -A "$dir" 2>/dev/null | sort)
    local count=0
    for entry in "${entries[@]}"; do
        if [ -d "$dir/$entry" ]; then
            count=$((count+1))
        fi
    done
    local i=1
    for entry in "${entries[@]}"; do
        local path="$dir/$entry"
        if [ -d "$path" ]; then
            local connector="‚îú‚îÄ‚îÄ"
            local next_prefix="$prefix‚îÇ   "
            if [ $i -eq $count ]; then
                connector="‚îî‚îÄ‚îÄ"
                next_prefix="$prefix    "
            fi
            local size=$(get_size_cached "$path")
            local size_str=$(human_size "$size")
            echo -e "${prefix}${connector} ${BOLD}üìÅ $entry/${NC} $size_str üëÅÔ∏è"
            print_data_tree "$path" "$next_prefix"
            i=$((i+1))
        fi
    done
}

# –ó–∞–≥–æ–ª–æ–≤–æ–∫
clear
echo -e "${BOLD}–°—Ç—Ä—É–∫—Ç—É—Ä–∞ –ø—Ä–æ–µ–∫—Ç–∞ /workspace/AAAproj${NC}"
echo

# –í–µ—Ä—Ö–Ω–∏–π —É—Ä–æ–≤–µ–Ω—å
print_tree "." "" 1